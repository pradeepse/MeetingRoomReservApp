//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MeetingRoomReservApp
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class MeetingRoomResvDBEntities : DbContext
    {
        public MeetingRoomResvDBEntities()
            : base("name=MeetingRoomResvDBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<Employee> Employees { get; set; }
        public DbSet<Location> Locations { get; set; }
        public DbSet<MeetingRoom> MeetingRooms { get; set; }
        public DbSet<MeetRoomReserved> MeetRoomReserveds { get; set; }
    
        public virtual ObjectResult<usp_GetMeetingRoomReserv_Result1> usp_GetMeetingRoomReserv(Nullable<int> empID)
        {
            var empIDParameter = empID.HasValue ?
                new ObjectParameter("EmpID", empID) :
                new ObjectParameter("EmpID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetMeetingRoomReserv_Result1>("usp_GetMeetingRoomReserv", empIDParameter);
        }
    
        public virtual ObjectResult<usp_MeetingRoomFinder_Result> usp_MeetingRoomFinder(Nullable<int> empID, Nullable<int> locationID, string roomName, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> noAttendees)
        {
            var empIDParameter = empID.HasValue ?
                new ObjectParameter("EmpID", empID) :
                new ObjectParameter("EmpID", typeof(int));
    
            var locationIDParameter = locationID.HasValue ?
                new ObjectParameter("LocationID", locationID) :
                new ObjectParameter("LocationID", typeof(int));
    
            var roomNameParameter = roomName != null ?
                new ObjectParameter("RoomName", roomName) :
                new ObjectParameter("RoomName", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var noAttendeesParameter = noAttendees.HasValue ?
                new ObjectParameter("NoAttendees", noAttendees) :
                new ObjectParameter("NoAttendees", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_MeetingRoomFinder_Result>("usp_MeetingRoomFinder", empIDParameter, locationIDParameter, roomNameParameter, fromDateParameter, toDateParameter, noAttendeesParameter);
        }
    }
}
